// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;
using ModelLib;


#nullable disable

namespace MoodeStabil.Manager
{
    public partial class AndreasDatabaseContext : DbContext
    {
        public AndreasDatabaseContext()
        {
        }

        public AndreasDatabaseContext(DbContextOptions<AndreasDatabaseContext> options)
            : base(options)
        {
        }

        public virtual DbSet<PiData> PiData { get; set; }
        public virtual DbSet<Subjects> Subjects { get; set; }

        protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
        {
            if (!optionsBuilder.IsConfigured)
            {
#warning To protect potentially sensitive information in your connection string, you should move it out of source code. You can avoid scaffolding the connection string by using the Name= syntax to read it from configuration - see https://go.microsoft.com/fwlink/?linkid=2131148. For more guidance on storing connection strings, see http://go.microsoft.com/fwlink/?LinkId=723263.
                optionsBuilder.UseSqlServer("Data Source=andreas-zealand-server-dk.database.windows.net;Initial Catalog=Andreas-database;Persist Security Info=True;User ID=Andreas;Password=SecretPassword!");
            }
        }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.HasAnnotation("Relational:Collation", "SQL_Latin1_General_CP1_CI_AS");

            modelBuilder.Entity<PiData>(entity =>
            {
                entity.Property(e => e.Date).HasColumnType("datetime");
                entity.Property(e => e.DateFromSubject).HasColumnType("datetime");

                entity.Property(e => e.SubjectId).HasColumnName("SubjectID");

                entity.HasOne(d => d.Subject)
                    .WithMany(p => p.PiData)
                    .HasForeignKey(d => d.SubjectId)
                    .HasConstraintName("FK_PiData_ToSubjects");
            });

            modelBuilder.Entity<Subjects>(entity =>
            {
                entity.Property(e => e.SubjectName)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.SubjectMeetTime).HasColumnType("datetime");
            });

            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}